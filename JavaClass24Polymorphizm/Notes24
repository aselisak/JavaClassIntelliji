
Method overriding in Java:
    method overriding happens when w have same name methods in parent and child class

    Benefits of Method Overriding:
    1) flexibility if we don't like something from the parent class we can override it and provide our own
    implementation
    2) same method can act differently depending upon the object on which we call it.

 Rules:
 1) without inheritance method overriding is not possible
 2) method signature should be same in parent class and child class
 3) if something does not participate in inheritance, we  cant override it like constructors and private methods
 4) we can increase visibility in the child classes but we cant decrease it for example we cant go from default
 or protected to public, but we  an do reverse
 5) we cant override a static method but we can redeclare it. for example main method cant be override as it is
 static
 6) we cant have different return type in the child class it must be same as of parent class
if we have same method name with different parameters its called overloading.
Two types of polymorphism:
        1- Compile time polymorphism //Also called "Static polymorphism"
            * *can be achieve through "Method overloading"
        2- Run Time polymorphism//Also called "Dynamic polymorphism".
            **can be achieve through "Method Overriding".

OOPS Main Pillars:
1. Inheritance==>(Code re-usability)
2. Polymorphism==>(less code dynamic code)
3. Abstraction ()
4. Encapsulating==> secure the data from other methods, when we make a data private then these data only use withing the class
