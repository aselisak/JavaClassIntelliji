Abstract classes in Java:

Abstract classes in Java are the classes with abstract keyword. we use abstract classes to achieve abstraction

Abstraction:
Is the process of hiding implementation details and only showing the functionality to end user.

Advantages:
1. Reduces the complexity.
2. Improve the maintainability.
3. Can also enforce rules up to certain limit.

Disadvantages:
1. classes get tightly coupled
class Dog{
String name;
static int legs=4;
//concrete class
}

public abstract class Phone{
String make;
String model;
static boolean has5G=true;
}

Rules:
Abstract classes can have all the things that regular classes do
but we can't create their objects directly and if a class is inheriting from the abstract class
it must either provide the implementation for the abstract method or it must be declared abstract
1. we can't have final and abstract keywords with a method at the same time.
2. We can't have static and abstract keyword with a method at the same time.
3. Abstract keywords with fields are not allowed.

Interfaces:
Interfaces are al so used to achieve abstraction Java
we can create interfaces with the keyword interface.

interface Human{
public static final int legs=2;
public abstract void walk();
public void eat(){
}

}






