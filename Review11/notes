Method Overriding in java;

Method overriding happens when we have same method names with same signature (Method name and its parameter are
called signature of a method) in a parent class and in a child class

Benefits:
1. Flexibility with the help of method overriding child classes can provide its own implementation methods that are present in the parent class
Polymorphism: same method can behave differently depending upon the object we call it.

Rules:
1. There must be parent child relationship between the classes.
2. the method that we are trying to override must be present in the child class with same name and parameters
3, If something don't participate in inheritance we can't override it for example private methods and fields and constructors
4. if a method is declared final inside the parent class we can't override that method inside the child class
5. we can't override the static methods but we can redeclare them.for example the main method.
6. we can not change the access modifier to be more restrictive
7. Method return type should be same

Method Overloading                                                   method overriding:
Method signature should be different                                 method signature should be same
Return type can be different                                         return type should be same
don't care about the access modifiers                                Access modifiers can't be more restrictive
we don' care about the non access modifiers(final static abstract)   we do care about the non access modifiers
we can overload constructors                                         we can't override constructors
we achieve compile time polymorphism or early binding or static      run time polymorphism or dynamic polymorphism or late binding

PolyMorphism:
Polymorphism happens when object behaves different. for example a method behave different when we pass different parameters or when we call the method
using different objects.

Final keyword in Java
final keyword is a non access modifier that can help restrict some of the features of OOPS
when we use it the class name no other class can inherit from that class.
when we use it method names we can't override those methods inside the child classes.
when we use it fields we can't change their values.
when we use it with fields we can't change their values in parent class or child class
but we can have same name fields inside the child class.

Rules:
1. we can't use final and abstract together
2. Static and Final can be used together.

Abstraction:
Is the process of hiding implementation details and only showing the functionality to end user.
for example if we have a method that calculates the tax of salaried person the
person who wants to calculate his tax don't need to understand all the details

Benefits:
  Clean code
  Less complexity
  improves the maintainability of code.
we can achieve abstraction in java using Abstract classes and interfaces:
a class declared with abstract keyword is called abstract class

Rules:
1. As soon as we have a method abstract that class must be also abstract
2. Abstract methods don't have bodies inside the classes in which the are defined.
3. A method can't be static and abstract at the same time
4. fields can't be abstract
5. methods can't be private and abstract
6. abstract keyword not allowed with constructors
7. we can have concrete and abstract methods in abstract class











